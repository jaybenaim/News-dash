"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchNews: function() { return /* binding */ fetchNews; },\n/* harmony export */   fetchSports: function() { return /* binding */ fetchSports; },\n/* harmony export */   fetchStocks: function() { return /* binding */ fetchStocks; }\n/* harmony export */ });\n/* harmony import */ var _mock_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mock-data */ \"(app-pages-browser)/./lib/mock-data.ts\");\n\nconst NEWS_API_KEY = \"9123788324b049e7a53e86611ba1be4a\";\nconst ALPHA_VANTAGE_API_KEY = \"EQ1FYTMJLMX0V0KW\";\nasync function fetchNews() {\n    try {\n        const response = await fetch(\"https://newsapi.org/v2/top-headlines?country=us&apiKey=\".concat(NEWS_API_KEY));\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const data = await response.json();\n        return data.articles.slice(0, 6).map((article, index)=>({\n                id: index,\n                title: article.title,\n                description: article.description || \"No description available\",\n                category: article.source.name,\n                imageUrl: article.urlToImage || \"https://images.unsplash.com/photo-1495020689067-958852a7765e\"\n            }));\n    } catch (error) {\n        console.error(\"Error fetching news:\", error);\n        return _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockNews;\n    }\n}\nasync function fetchStocks() {\n    try {\n        const symbols = [\n            \"AAPL\",\n            \"MSFT\",\n            \"GOOGL\"\n        ];\n        const stocks = await Promise.all(symbols.map(async (symbol)=>{\n            var _chartData_;\n            const response = await fetch(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\".concat(symbol, \"&interval=5min&apikey=\").concat(ALPHA_VANTAGE_API_KEY));\n            if (!response.ok) {\n                throw new Error(\"HTTP error! status: \".concat(response.status));\n            }\n            const data = await response.json();\n            console.log(\"data\", data);\n            const timeSeries = data[\"Time Series (5min)\"];\n            if (!timeSeries) {\n                throw new Error(\"No time series data available\");\n            }\n            const chartData = Object.entries(timeSeries).map((param)=>{\n                let [time, values] = param;\n                return {\n                    time: time.split(\" \")[1],\n                    value: parseFloat(values[\"1. open\"])\n                };\n            });\n            return {\n                symbol,\n                name: getCompanyName(symbol),\n                price: ((_chartData_ = chartData[0]) === null || _chartData_ === void 0 ? void 0 : _chartData_.value) || 0,\n                change: calculateChange(chartData),\n                chartData: chartData.slice(0, 24).reverse()\n            };\n        }));\n        return stocks;\n    } catch (error) {\n        console.error(\"Error fetching stocks:\", error);\n        return _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockStocks;\n    }\n}\nfunction getCompanyName(symbol) {\n    const companies = {\n        AAPL: \"Apple Inc.\",\n        MSFT: \"Microsoft Corporation\",\n        GOOGL: \"Alphabet Inc.\"\n    };\n    return companies[symbol] || symbol;\n}\nfunction calculateChange(chartData) {\n    if (chartData.length < 2) return 0;\n    const latest = chartData[0].value;\n    const previous = chartData[1].value;\n    return (latest - previous) / previous * 100;\n}\nasync function fetchSports() {\n    try {\n        const response = await fetch(\"https://site.api.espn.com/apis/site/v2/sports/basketball/nba/scoreboard\");\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const data = await response.json();\n        return data.events.map((event)=>({\n                id: event.id,\n                homeTeam: event.competitions[0].competitors[0].team.abbreviation,\n                awayTeam: event.competitions[0].competitors[1].team.abbreviation,\n                homeScore: parseInt(event.competitions[0].competitors[0].score) || 0,\n                awayScore: parseInt(event.competitions[0].competitors[1].score) || 0,\n                status: event.status.type.shortDetail,\n                league: \"NBA\"\n            }));\n    } catch (error) {\n        console.error(\"Error fetching sports:\", error);\n        return _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockSports;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});